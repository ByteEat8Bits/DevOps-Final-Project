name: Fetch and Update Stock Data

on:
  schedule:
    - cron: '0 10 * * *'  # 每天 UTC 0:00 執行
  workflow_dispatch:      # 手動觸發

jobs:
  # Job 1: 抓取數據並產生 Artifact
  fetch-data:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Notify checkout success
        run: echo "✅ Repository checked out successfully."

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # 使用 Python 3.x 版本
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 1: 執行資料抓取程式
      - name: Run data fetch script
        run: |
          echo "🚀 Starting data fetch script..."
          python fetch_data.py  # 假設這個腳本會生成 stock_data.csv 檔案
          echo "✅ Data fetch script executed successfully."

      # Step 1.5: 將輸出檔案存為 Artifact
      - name: Upload stock data as artifact
        uses: actions/upload-artifact@v3
        with:
          name: stock_data_artifact
          path: stock_data.csv  # 替換為你的實際檔案名稱

  # Job 2: 推送到 data-archive 分支
  push:
    runs-on: ubuntu-latest
    needs: fetch-data  # 依賴 fetch-data 工作，確保只有在抓取數據成功時才執行

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download stock data artifact
        uses: actions/download-artifact@v3
        with:
          name: stock_data_artifact

      - name: Commit and push data to branch
        run: |
          echo "🚀 Committing and pushing changes to branch..."
          git fetch origin data-archive:data-archive
          git checkout data-archive
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add stock_data.csv  # 添加文件並提交
          git commit -m "Updated stock_data.csv from workflow"
          git push origin HEAD:data-archive  # 將變更推送到 data-archive分支 ❗之後如果不用建立單獨分支放檔案，需要更改
          echo "✅ Changes pushed to repository successfully."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
